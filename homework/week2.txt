0.
    Adapter, Decorator
    Streams in Java (InputStream, OutputStream, Reader, Writer)
    Annotation
    Reflection
    class Socket

1. Написать собственную реализацию класса Scanner, работающую с символьными потоками.
Создать два конструктора в один передается объект по ссылке Reader, во второй String.

Реализовать методы:

   String next() - чтение одного слова в строке
   int nextInt() - чтение целого числа из строки или InputMismatchException
   String nextLine() - чтение всей строки
   boolean hasNext() - определение наличия в потоке данных
   boolean hasNextInt() - определение наличия в потоке целого int числа
   useDelemiter(String) - использует разделитель
   close() - закрытие сканнера, теперь нельзя использовать и NoSuchElementException

2. Задача: Java Command Line (JCL)

   Реализовать консольную программу на Java, которая бы представляла некую реализацию командной строки, то есть могла бы выполнять команды вводимые построчно пользователем. Под командой понимается следующая строка:
   "имя команды" "аргумент №1" "аргумент №2" ... "аргумент №N"
   Код, который выполняет необходимую команду пользователя, должен оформляться как отдельный Java класс.
   Программа должна поддерживать следующие команды:

   dir — выводит список файлов в текущей директории
   cd «путь» — перейти в директорию, путь к которой задан первым аргументом
   pwd — вывести полный путь до текущей директории
   open - просмотреть содержимое файла

    Программа должна поддерживать команду "! имя_системной_программы аргумент№1… аргумент№N", которая запускает
    системную программу с соответствующими аргументами — так же ввод JCL должен подаваться на вход системной программы и
    тоже самое с ее выводом
    Программа должна поддерживать следующий синтаксис: «команда1 аргументы && команда2 аргументы» и
    «команда1 аргументы || команда2 аргументы». В первом случае «команда2» запускается только если «команда1» выполнилась успешно.
    Во втором случае «команда2» запускается только тогда, когда выполнение «команда1» завершилось не успешно
    Программа должна поддерживать возможность запускать команды в фоновом режиме. Для этого достаточно в конце командной
    строчки ввести знак "&". Так же программа должна поддерживать команду «jobs», которая выводит список задач, которые
    выполняются в фоне
    Реализовать возможность запускать программу в сетевом варианте: т.е. программа открывает порт и работать с ней можно
    используя обычный telnet с отдалённой машины.


3. Написать синхронный чат между двумя пользователями

